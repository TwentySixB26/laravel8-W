Factory faker 
adalah suatu pabrik data yang membuat data palsu atau data random


===========================================================================

Cara mengubah faker ke dalam bahasa indonesia/data yang berhubungan dengan indonesia seperti nama nama orang indo atau pun yang lain 

1. masuk ke folder confiq

2. cari file app.php

3. klik CTRL+F, dan cari "faker"

4. ganti 'faker_locale' => env('APP_FAKER_LOCALE', 'en_US') dengan 
 'faker_locale' => env('FAKER_LOCALE','en_US') , 

5. cari file .env 

6. scroll paling bawah dan tulis code ini :
FAKER_LOCALE =id_ID


7. cek apakah faker nya sudah bisa digunakan atau belum 

8. masuk ke file DatabaseSeeder.php , dan komentari User::create([]) beserta isinya. 

9. jalankan code ini , ganti dari 10 menjadi 5 untuk mencoba menambahkan 5 user : 
\App\Models\User::factory(5)->create(); 

10. jalankan terminal, dan tulis jalankan 
php artisan migrate:fresh --seed 

11. Succes 


==========================================================================


membuat factory untuk kita sendiri (post)

1.  Buat factoy, bisa mengunakan : 
	- CTRL+SHIFT+P dan ketikan make:factory
	- atau mengunakan terminal yaitu :
	  php artisan make:factory PostFactory(nama bebas)


untuk kedepanya jika ingin membuat suatu Models dapat langsung membuat seeder,factory dan migration nya langsung yaitu dengan cara :
php artisan make:model Student -mfs 


2. buka file PostFactory dan isikan dengan code berikut,Code sudah ada tinggal memasukan yang didalam return 
 
public function definition(): array
    {
        return [
            	'title' =>$this->faker->sentence(mt_rand(2,8)), 
			
			//didalam dalam kurung() itu kita isikan mau berapa kata,sentence sendiri adalah untuk text jadi artinya kita mau berapa text
			// tapi jika tidak diisikan otomatis akan diisi secara default yaitu 6 
        		
			//mt rand() adalah untuk menentukan bilangan random bisa juga menentukan min dan max dalam code diatas berarti akan diisi 
			// sebanyak min 2 dan max 8 
	   
		'slug' => $this->faker->slug(),
		'excerpt' => $this->faker->paragraph() ,
		'body' => $this->faker->paragraph(mt_rand(5,10)), 
		'category_id' => mt_rand(1,3) , 
            	'user_id' => mt_rand(1,5)
	];
    }




3. buka file databaseSeeder dan komentari code ini (Post::create) :
Post::create([
            
]) ;


4. tulis code :
Post::factory(20)->create()


5. jalankan :
php artisan migrate:fresh --seed 

6. succes 



=======================================================================================


menampilkan data post dari yang paling terbaru 

1. masuk ke PostController 

2. ganti code lama dengan code ini :

public function index(){
        return view('blog',[
            "title" => "Blog", 
	    // "blogs" => Post::all() 
            "blogs" => Post::latest()->get()  
        ]);
    }



=========================================================================================

menampilkan post berdasarkan author,ketika author di klik maka akan muncul semua post yang dibuat oleh author :

1. buka web.php 

2. Route::get('/authors/{user}' , function(User $user){
	return view('blog' , [
        'title' => 'user Post' ,
        'posts' => $user->posts
    ]) ;
}) ;


3. masuk ke folder view dan file blog.php

4. ganti codenya seperti ini :
<p> Website by <a href="/authors/{{ $blog->user->id }}" class="text-decoration-none"> {{ $blog->user->name }}</a> |      
          <a href="/categories/{{ $blog->category->slug }}" class="text-decoration-none"> {{ $blog->category->name }} </a>
</p>


5. succes 


tapi akan terasa aneh,karena di link tampilnya id dan itu akan sangat berbahaya untuk keamanan database. Maka kita buat untuk mencegahnya dengan cara 
menambahkan field baru pada tabel, caranya adalah : 

1. buka file create_users_table.php 

2. tambahkan field baru dengan code :
$table->string('username')->unique();
//jadi yang akan tampil di url/link bukan id tapi username 

3. Buka file userFactory

4. tambahkan code :
'username' => $this->faker->unique()->userName(),

5. buat seeder nya kembali, masuk kembali ke databaseSeeder 

6. tambahkan code ini jika belum ada untuk membuat post secara random 
Post::factory(10)->create()

7. nyalakan code ini jika di komentari :
User::factory(5)->create(); 


8. jalankan juga jika dikomentari  :
Category::create([
            'name' => 'Web Progaming',
            'slug' => 'web-progaming'
        ]) ; 
        

9. jalankan ini di terminal :
php artisan migrate:fresh --seed 


10. data fake sukses masuk 

11. perbaiki authors nya agar yg dikirim username bukan id

12. buka web.php dan ganti ke 
Route::get('/authors/{author:username}' , function(User $author){
	return view('blog' , [
        'title' => 'user Post' ,
        'posts' => $author->posts
    ]) ;
}) ;

kenapa ada username setelah author? karena secara default jika tidak ditulis contoh : {author} maka yang akan jadi perbandingan adalah id,
maka {author} yang ditangkap akan dianggap sebagai id,ketika tidak dikasih alias seperti username ({author:username}) maka yang akan jadi perbandingan adalah
"select * from post where id=marfuah" kenapa marfuaah? karena link tersebut berisikan marfuah bukan id karena sudah diganti hrefnya, maka yang akan terjadi 
adalah eror karena tidak ada id yang bernilai marfuah yang ada hanyalah username yang bernama marfuah. lantas bagaimana untuk menganti id tersebut menjadi
username? ya diberikan alias yang sesuai dengan table didalam db nya itulah kenapa diberi :username. 


13. buka file bloh.blade.php dan ganti menjadi 
<p> Website by <a href="/authors/{{ $blog->user->username}}" class="text-decoration-none"> {{ $blog->user->name }}</a> |      
          <a href="/categories/{{ $blog->category->slug }}" class="text-decoration-none"> {{ $blog->category->name }} </a>
</p>


14. buka file detail.php 
 <p> Website by <a href="/authors/{{ $posts->user->username }}" class="text-decoration-none"> {{ $posts->user->name }}</a> |          
            <a href="/categories/{{ $posts->category->slug }}" class="text-decoration-none"> {{ $posts->category->name }} </a>
        </p>